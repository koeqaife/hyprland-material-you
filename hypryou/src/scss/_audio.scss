@use "colors" as *;
@use "variables" as *;
@use "calculated" as *;
@use "sass:color";

window.audio {
    @include nLayerBackground($background, 1);
    min-width: 22.5rem;
    border-radius: $hyprlandRounding;
    border: 0.0625rem solid $layerBorderColor;
    min-height: 7.5rem;

    .stack-button {
        border-radius: 2rem;
        min-height: 2rem;
        padding-left: 1.25rem;
        padding-right: 1.25rem;
        margin-right: 0.5rem;
        margin-top: 0.5rem;

        &:first-child {
            margin-left: 0.5rem;
        }

        label {
            font-size: 1rem;
            font-weight: 400;
        }
        .icon {
            font-weight: 500;
            margin-right: 0.5rem;
            font-variation-settings: "opsz" 20;
        }

        &.active {
            background-color: $secondaryContainer;
            label {
                color: $onSecondaryContainer;
            }
            .icon {
                font-variation-settings: "opsz" 20, "FILL" 1;
            }

            &:hover {
                background-color: color.mix($secondaryContainer, $inverseOnSurface, 82%);
            }
            &:active {
                background-color: color.mix($secondaryContainer, $inverseOnSurface, 75%);
            }
        }

        &:not(.active) {
            background-color: transparent;
            label {
                color: $onSurface;
            }

            &:hover {
                background-color: color.mix(transparent, $inverseOnSurface, 82%);
            }
            &:active {
                background-color: color.mix(transparent, $inverseOnSurface, 75%);
            }
        }
    }

    .with-min-height {
        min-height: 24rem;
    }

    .audio-item {
        @include nLayerBackground($surfaceContainer, 2);
        @include elevation(1);
        margin-left: 0.5rem;
        margin-right: 0.5rem;
        border-radius: max(calc($hyprlandRounding - 0.5rem), 0.25rem);
        padding: 0.25rem;
        padding-top: 0.5rem;
        margin-top: 0.5rem;
        outline-offset: -0.0625rem;

        &.muted {
            outline: 0.0625rem solid $outlineVariant;
        }
        &:not(:only-child).is-default {
            outline: 0.0625rem solid $primary;
        }
        &.is-default.muted {
            outline: 0.0625rem dashed $secondary;
        }

        .icon,
        image {
            margin-left: 0.25rem;
            font-size: 1.125rem;
            min-height: 1.375rem;
            min-width: 1.125rem;
            font-variation-settings: "opsz" 20;
            font-weight: 400;
            margin-right: 0.5rem;
            color: $onSurface;
        }

        .label {
            font-size: 1rem;
            font-weight: 400;
            color: $onSurface;
        }

        .percent {
            margin-right: 0.25rem;
            font-size: 1rem;
            font-weight: 400;
            color: $onSurfaceVariant;
        }
        scale slider {
            box-shadow: none;
            @if $layerOpacity == 1 {
                box-shadow: -0.375rem 0 0 0 $surfaceContainer, 0.375rem 0 0 0 $surfaceContainer;
            }
        }

        &:last-child {
            margin-bottom: 0.5rem;
        }

        popover contents {
            background-color: $surfaceContainer;
            border: 0.0625rem solid $layerBorderColor;
            border-radius: 0.25rem;
            min-height: 0;
            min-width: 12rem;
            padding-top: 0.5rem;
            padding-bottom: 0.5rem;

            modelbutton {
                border-radius: 0;
                min-height: 2.5rem;
                padding-left: 2rem;
                padding-right: 2rem;

                &:hover {
                    background: color.mix($surfaceContainer, $onSurface, 90%);
                }
                &:active {
                    background: color.mix($surfaceContainer, $onSurface, 82%);
                }
            }
        }
    }
}
